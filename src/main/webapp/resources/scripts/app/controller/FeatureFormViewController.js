// Generated by CoffeeScript 1.7.1

/*
 FeatureFormView is sidebar view control for posting feature data.
 */

(function () {
    var __hasProp = {}.hasOwnProperty,
        __extends = function (child, parent) {
            for (var key in parent) {
                if (__hasProp.call(parent, key)) child[key] = parent[key];
            }
            function ctor() {
                this.constructor = child;
            }

            ctor.prototype = parent.prototype;
            child.prototype = new ctor();
            child.__super__ = parent.prototype;
            return child;
        };

    define(['leaflet', 'app/Module', 'L.Control.Sidebar', 'app/EventObserver', 'app/Events'], function (L, Module, Sidebar, EventObserver, Events) {
        var FeatureFormViewController;
        return FeatureFormViewController = (function (_super) {
            __extends(FeatureFormViewController, _super);

            FeatureFormViewController.prototype.viewControlId = null;

            FeatureFormViewController.prototype.viewControl = null;

            FeatureFormViewController.prototype.eventObserver = null;

            function FeatureFormViewController(map, viewControlId) {
                this.viewControlId = viewControlId;
                this.viewControl = L.control.sidebar(this.viewControlId, {
                    position: 'left'
                });
                map.addControl(this.viewControl);
                map.on('popupopen', (function (_this) {
                    return function (e) {
                        return _this.onPopupOpen(e);
                    };
                })(this));
                map.on('draw:created', (function (_this) {
                    return function (e) {
                        return _this.showViewControl();
                    };
                })(this));
                this.eventObserver = EventObserver.getInstance();
                this.eventObserver.subscribe(Events.SET_BBOX, this, this.setBboxLatLngBounds);
                this.eventObserver.subscribe(Events.SET_GEOJSON, this, this.setLayerGeoJson);
            }

            FeatureFormViewController.prototype.showViewControl = function () {
                return this.viewControl.show();
            };

            FeatureFormViewController.prototype.setBboxLatLngBounds = function (options) {
                var latLngBounds;
                this.assert(options.bbox !== null, 'options.bbox is set!!');
                latLngBounds = options != null ? options.bbox : void 0;
                this.log("" + options);
                this.log("event fired " + latLngBounds);
                $('#_feature_bbox0').attr('value', latLngBounds != null ? latLngBounds.getSouth() : void 0);
                $('#_feature_bbox1').attr('value', latLngBounds != null ? latLngBounds.getWest() : void 0);
                $('#_feature_bbox2').attr('value', latLngBounds != null ? latLngBounds.getNorth() : void 0);
                return $('#_feature_bbox3').attr('value', latLngBounds != null ? latLngBounds.getEast() : void 0);
            };

            FeatureFormViewController.prototype.setLayerGeoJson = function (options) {
                var geojson;
                this.assert(options.geojson !== null, 'options.geojson is null');
                geojson = options.geojson;
                if (geojson !== null) {
                    return $('#_feature_geomAsGeoJson').attr('value', JSON.stringify(geojson));
                }
            };

            FeatureFormViewController.prototype.onPopupOpen = function (e) {
                var feature;
                feature = e.popup.options.feature;
                $('#_feature_geomAsGeoJson').attr('value', JSON.stringify(feature.geometry));
                $('#_feature_featureId').attr('value', feature.properties.featureId);
                $('#_feature_featureName').attr('value', feature.properties.featureName);
                $('#_feature_featureDescription').text(feature.properties.featureDescription);
                return $('#_feature_tags').attr('value', feature.properties.tags);
            };

            return FeatureFormViewController;

        })(Module);
    });

}).call(this);

//# sourceMappingURL=FeatureFormViewController.map
